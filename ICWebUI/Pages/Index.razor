@page "/"
@inject HttpClient Http

<h1>Sprawdź skład!</h1>

@if (!string.IsNullOrWhiteSpace(HttpErrorString))
{
    <div class="text-danger">
        @HttpErrorString
    </div>
}
<div>
    <div class="form-group shadow-textarea">
        <label for="IngredientsNames">Tu wpisz skład do sprawdzenia:</label>
        <textarea @bind-value="IngredientsNames" @bind-value:event="oninput" class="form-control z-depth-1" rows="3" placeholder="składnik 1, składnik 2, ..."></textarea>
    </div>
    <div class="form-group">
        <button @onclick="HandleValidSubmit">sprawdź skład</button>
    </div>
</div>

@if (ingredientsList != null)
{
    <h3>znalezione składniki:</h3>
    <div class="list-group list-group-flush">
        @foreach (var ingredient in ingredientsList)
        {
            <DisplayIngredient Ingredient=ingredient />
        }
    </div>
}


@code{

    public string IngredientsNames { get; set; }
    private List<IngredientModel> ingredientsList;
    private string HttpErrorString;
    private string InputErrorString;

    private async Task HandleValidSubmit()
    {
        if (string.IsNullOrEmpty(IngredientsNames))
        {
            return;
        }

        var namesArray = IngredientsNames.Split(", ");

        try
        {
            HttpResponseMessage responce = await Http.PostAsJsonAsync("api/ingredientschecker", namesArray);
            Console.WriteLine("D:");
            ingredientsList = await responce.Content.ReadFromJsonAsync<List<IngredientModel>>();

        }
        catch (Exception ex)
        {

            HttpErrorString = ex.Message;
        }
    }
}